#!/bin/bash

source local.env
_basedir=$SPM_PREFIX/
_recdir=$( readlink -f ./recipes )

__conf_dir=${_basedir}/.spm/
_list=${__conf_dir}/list
__tmp=$(mktemp -d -t spm.XXXXXXXXXX)

mkdir -p ${_basedir} ${__conf_dir}

action=$1

#############
RESTORE='\033[0m'

RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'
############


list_available() {
    ls -1 ${_recdir}
}

_record_installed() {
    local _pkg=$1
    local _ver=$2
    cat ${_list} 2> /dev/null | awk -v pkg=$_pkg '$1 == pkg { next};1' > ${_list}.new
    echo "$_pkg $_ver" >> ${_list}.new
    mv ${_list}.new ${_list}
}

_is_installed() {
    local _pkg1=$1
    local _ver1=$2
    test -f ${_list} || return 1
    while read line; do
        local _pkg2=$( echo "$line" | awk '{print $1}' )
        local _ver2=$( echo "$line" | awk '{print $2}' )
        e=1
        if [ "$_pkg1" = "$_pkg2" ]; then
            e=2
        fi
        if [ "${_pkg1}" = "${_pkg2}" -a "$_ver1" = "$_ver2" ]; then
            e=0
            return $e
        fi
    done < ${_list}
    return $e
}

install() {
    local _pkg=$1
    if [ ! -f ${_recdir}/$_pkg ]; then
        echo -e "${LYELLOW} >> Recipe for package $_pkg not found ${RESTORE}"
        exit 1
    fi

    unset pkg ver rel grp mkd bak opt src sha
    source local.env
    source ${_recdir}/$_pkg
        (
        unset pkg ver rel grp mkd bak opt src sha
        for i in ${dep[@]}; do
            install $i || exit 1
        done
        )
        res=$?
        if [ $res -ne 0 ]; then
            exit 1
        fi
    if ! _is_installed  $pkg $ver; then
        echo -e "${LYELLOW} >> Installing $pkg ${RESTORE}"
        _d=$PWD
        cd ${__tmp}
        _build #> build.log-$pkg
        res=$?
        cd $_d
          if [ $res -ne 0 ]; then
            echo -e " ${RED}X>> Building $pkg $ver failed${RESTORE}"
            echo -e " ${LCYAN}>> Temp dir is ${__tmp}${RESTORE}"
            exit 1
          fi

    fi
    hash -r
    _list
    _record_installed $pkg $ver
}

case $action in
    list_available|list)     list_available ;;
    list_installed)     list_installed ;;
    install)            install $2 ;;
    *)                  echo "Unknown action: $a"; exit 1; ;;
esac
